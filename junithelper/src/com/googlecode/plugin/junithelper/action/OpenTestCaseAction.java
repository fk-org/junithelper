package com.googlecode.plugin.junithelper.action;

import org.eclipse.core.internal.resources.File;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IWorkspace;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.jdt.internal.core.CompilationUnit;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.action.IAction;
import org.eclipse.jface.dialogs.MessageDialog;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IActionDelegate;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.ide.IDE;

import com.googlecode.plugin.junithelper.IConstants;

public class OpenTestCaseAction extends Action implements IActionDelegate
{

	private ISelection selection = null;

	@SuppressWarnings("restriction")
	public void run(IAction action)
	{

		String projectName = null;
		String testTargetClassname = null;
		String testCaseFilename = null;
		String testCaseCreateDirpath = null;
		String testCaseResource = null;

		try
		{

			StructuredSelection structuredSelection = null;
			if (selection instanceof StructuredSelection)
			{
				// viewer
				structuredSelection = (StructuredSelection) selection;
				// } else if ( selection instanceof TextSelection ) {
				// // java editor
			}
			if (structuredSelection != null && structuredSelection.size() == 0)
			{
				// 選択して下さい
				Shell shell = new Shell();
				MessageDialog.openWarning(shell, IConstants.Dialog.Common.TITLE,
						IConstants.Dialog.Common.REQUIRED);
			} else if (structuredSelection != null && structuredSelection.size() > 1)
			{
				// 一つしか選べません
				Shell shell = new Shell();
				MessageDialog.openWarning(shell, IConstants.Dialog.Common.TITLE,
						IConstants.Dialog.Common.SELECT_ONLY_ONE);

			} else
			{

				// get test case file create filesystem path
				String selected = "";

				if (structuredSelection == null)
				{
					IWorkbenchPage activePage = PlatformUI.getWorkbench()
							.getActiveWorkbenchWindow().getActivePage();
					// TODO : learn more to get file path
					String testClassPath = activePage.getActiveEditor().getTitleToolTip();

					String[] dirArr = testClassPath.split(IConstants.DIR_SEPARATOR);
					testCaseFilename = dirArr[dirArr.length - 1].replace(
							IConstants.JAVA_EXP, "Test" + IConstants.JAVA_EXP);
					testTargetClassname = dirArr[dirArr.length - 1].replace(
							IConstants.JAVA_EXP, IConstants.EMPTY_STIRNG);
					// TODO: judge class path top
					for (int i = 2; i < dirArr.length - 1; i++)
					{
						selected += IConstants.DIR_SEPARATOR + dirArr[i];
					}
					selected += IConstants.DIR_SEPARATOR + "test";

				} else if (structuredSelection.getFirstElement() instanceof File)
				{
					// navigator

					String resourceStr = selection.toString().split("src")[1].replace(
							"]", IConstants.EMPTY_STIRNG);
					String[] dirSepArr = resourceStr.split(IConstants.DIR_SEPARATOR);
					testTargetClassname = dirSepArr[dirSepArr.length - 1].replace(
							IConstants.JAVA_EXP, IConstants.EMPTY_STIRNG);
					testCaseFilename = dirSepArr[dirSepArr.length - 1].replace(
							IConstants.JAVA_EXP, "Test" + IConstants.JAVA_EXP);
					dirSepArr[dirSepArr.length - 1] = "test";
					selected = IConstants.EMPTY_STIRNG;
					for (String each : dirSepArr)
					{
						if (each != null && !each.equals(IConstants.EMPTY_STIRNG))
							selected += IConstants.DIR_SEPARATOR + each;
					}

				} else if (structuredSelection.getFirstElement() instanceof CompilationUnit)
				{
					// package explorer

					String classInfoStr = selection.toString();
					selected = classInfoStr.split("\\[in")[1].trim();
					selected = selected.replaceAll("\\.", IConstants.DIR_SEPARATOR);
					testTargetClassname = classInfoStr.split(IConstants.RegExp.JAVA_EXP)[0]
							.replaceAll("(\\[|\\])", IConstants.EMPTY_STIRNG).replaceAll(
									"Working copy ", IConstants.EMPTY_STIRNG).trim();
					testCaseFilename = testTargetClassname + "Test" + IConstants.JAVA_EXP;
					selected = IConstants.DIR_SEPARATOR + selected
							+ IConstants.DIR_SEPARATOR + "test";
				}

				// TODO
				String baseDir = System.getProperty("user.dir");

				if (testTargetClassname == null)
				{

					MessageDialog.openWarning(new Shell(),
							IConstants.Dialog.Common.TITLE,
							IConstants.Dialog.TestCase.SELECT_JAVA_FILE);

				} else if (testTargetClassname.matches(".+Test$"))
				{
					// すでにテストを開いている

					MessageDialog.openWarning(new Shell(),
							IConstants.Dialog.Common.TITLE,
							IConstants.Dialog.TestCase.ALREAY_OPEN_TEST_CLASS);

				} else if (baseDir == null || baseDir == IConstants.EMPTY_STIRNG)
				{

					MessageDialog.openWarning(new Shell(),
							IConstants.Dialog.Common.TITLE,
							IConstants.Dialog.TestCase.UNSETTING_UP_TEST_PJT_ROOT_DIR
									+ IConstants.LINE_FEED + IConstants.LINE_FEED
									+ IConstants.Dialog.Common.EXECUTE_AFTER_SETTING);

				} else
				{

					baseDir = baseDir.toString().replaceAll(
							IConstants.WINDOWS_DIR_SEPARATOR, IConstants.DIR_SEPARATOR);
					String[] tmpStrArr = baseDir.split(IConstants.DIR_SEPARATOR);
					projectName = tmpStrArr[tmpStrArr.length - 1];
					String rootDir = baseDir + IConstants.DIR_SEPARATOR + "src";

					testCaseResource = "src" + IConstants.DIR_SEPARATOR + selected
							+ IConstants.DIR_SEPARATOR + testCaseFilename;
					testCaseCreateDirpath = rootDir + selected;

					// 既に存在するかどうか
					java.io.File outputFile = new java.io.File(testCaseCreateDirpath
							+ IConstants.DIR_SEPARATOR + testCaseFilename);
					if (outputFile.exists())
					{

						// open test case
						int retryCount = 0;
						IEditorPart editorPart = null;
						while (true)
						{
							try
							{
								IWorkspace workspace = ResourcesPlugin.getWorkspace();
								IWorkspaceRoot root = workspace.getRoot();
								IProject project = root.getProject(projectName);
								IFile testCaseFile = project.getFile(testCaseResource);
								String editorId = IDE.getEditorDescriptor(
										testCaseFile.getName()).getId();
								IWorkbenchPage page = PlatformUI.getWorkbench()
										.getActiveWorkbenchWindow().getActivePage();
								editorPart = IDE.openEditor(page, testCaseFile, editorId);
								editorPart.setFocus();
							} catch (Exception e)
							{
								retryCount++;
								if (retryCount > 10)
									break;
								try
								{
									Thread.sleep(1500);
								} catch (InterruptedException irte)
								{
								}
							}
							break;
						}
					} else
					{

						if (testCaseFilename != null
								&& MessageDialog
										.openConfirm(
												new Shell(),
												IConstants.Dialog.Common.TITLE,
												testCaseFilename
														+ IConstants.Dialog.Common.NOT_EXIST
														+ IConstants.LINE_FEED
														+ IConstants.Dialog.Common.COMFIRM_CREATE_NEW_FILE))
						{
							// create new file(java,dicon)
							new CreateNewTestCaseAction().run(action, selection);
						}
					}
				}
			}
		} catch (Exception e)
		{
			e.printStackTrace();
		}
	}

	public void selectionChanged(IAction action, ISelection selection)
	{
		this.selection = selection;
		// TODO : popup menu enable/disable
	}

}
