# Preference
Preference.Common.groupName=Common
Preference.Common.description=Specify the source folders.
Preference.Common.srcMainPath=Main source folder
Preference.Common.srcTestPath=Test source folder
Preference.TestClassGen.enabled=Generate test classes
Preference.TestClassGen.groupName=Test class
Preference.TestClassGen.description=Specify JUnit version and the TestCase to extend.
Preference.TestClassGen.junitVersion=JUnit version
Preference.TestClassGen.junitVersion3=JUnit 3.x
Preference.TestClassGen.junitVersion4=JUnit 4.x
Preference.TestClassGen.classToExtend=TestCase class to extend
Preference.TestClassGen.usingJunitHelperRuntimeLib=Using JUnit Helper Runtime library.
Preference.TestMethodGen.enabled=Generate test methods
Preference.TestMethodGen.groupName=Test method
Preference.TestMethodGen.delimiter= Delimiter in method name 
Preference.TestMethodGen.enabledArgs= Include arg types in method name
Preference.TestMethodGen.subGroupNameForArgs=Arg types in method name
Preference.TestMethodGen.argsPrefix=Prefix
Preference.TestMethodGen.argsDelimiter=Delimiter
Preference.TestMethodGen.enabledReturn= Include return type in method name
Preference.TestMethodGen.subGroupNameForReturn=Return type in method name
Preference.TestMethodGen.returnPrefix=Prefix
Preference.TestMethodGen.returnDelimiter=delimiter
Preference.TestMethodGen.enabledException= Test patterns for throwing Exception
Preference.TestMethodGen.subGroupNameForException=Exception types in method name
Preference.TestMethodGen.exceptionPrefix=Prefix
Preference.TestMethodGen.exceptionDelimiter=Delimiter
Preference.TestMethodGen.includePublic= Test patterns for \"public\" methods
Preference.TestMethodGen.includeProtected= Test patterns for \"protected\" methods
Preference.TestMethodGen.includePackageLocal= Test patterns for \"package local\" methods
Preference.TestMethodGen.excludesAccessors= Ignore accessors(setter/getter)
Preference.TestMethodGen.enabledTestMethodSampleImpl= Generate template implementation
Preference.TestMethodGen.usingMock=Mock
Preference.TestMethodGen.subGroupNameForMock=Mock object frameworks 
Preference.TestMethodGen.descriptionForMock=Select your favorite framework.
Preference.TestMethodGen.usingMockNone=None
Preference.TestMethodGen.usingMockEasyMock=EasyMock
Preference.TestMethodGen.usingMockJMock2=JMock2
Preference.TestMethodGen.usingMockMockito=Mockito
Preference.TestMethodGen.usingMockJMockit=JMockit

# Dialog
Dialog.Common.title=JUnit Helper
Dialog.Common.invalidPreference=Maybe invalid preference... Please check again!
Dialog.Common.confirmToExecute=Execute OK?
Dialog.Common.required=Please select target.
Dialog.Common.selectOneOnly=Please select only one target.
Dialog.Common.alreadyExist=Already exist.
Dialog.Common.notExist=Not exist.
Dialog.Common.confirmToProceed=Proceed OK?
Dialog.Common.notToCreateNewFilePreference=Test case file does not exist.\nPlease alter preferences if you want to generate.
Dialog.Common.confirmToCreateNewFile=Create new test case file?
Dialog.Common.resourceRefreshError=Resource refresh error!
Dialog.Common.selectJavaFile=Please select java source file(*.java).
Dialog.Common.notTestClass=Please select test class file.

# Message
Message.autoGenTodoMessage= TODO auto-generated by JUnit Helper.
Message.expectedExceptionNotThrownMessage=Expected exception was not thrown!
Message.exempliGratia=e.g.