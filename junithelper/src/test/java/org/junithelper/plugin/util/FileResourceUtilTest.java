package org.junithelper.plugin.util;

import java.io.BufferedInputStream;
import java.nio.charset.Charset;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.CoreException;
import org.junithelper.plugin.exception.InvalidPreferenceException;
import org.mozilla.universalchardet.UniversalDetector;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

import junit.framework.TestCase;

public class FileResourceUtilTest extends TestCase {

	public void test_close_A$BufferedInputStream() throws Exception {
		BufferedInputStream bis = null;
		FileResourceUtil.close(bis);
	}

	public void test_close_A$BufferedReader() throws Exception {
		BufferedReader br = null;
		FileResourceUtil.close(br);
	}

	public void test_close_A$FileOutputStream() throws Exception {
		FileOutputStream fos = null;
		FileResourceUtil.close(fos);
	}

	public void test_close_A$InputStream() throws Exception {
		InputStream is = null;
		FileResourceUtil.close(is);
	}

	public void test_close_A$InputStreamReader() throws Exception {
		InputStreamReader isr = null;
		FileResourceUtil.close(isr);
	}

	public void test_close_A$OutputStreamWriter() throws Exception {
		OutputStreamWriter osw = null;
		FileResourceUtil.close(osw);
	}

	public void test_readFile_A$IFile() throws Exception {
		// TODO auto-generated by JUnit Helper.
		InputStream expected = null;
		IFile arg0 = null;
		InputStream actual = FileResourceUtil.readFile(arg0);
		assertEquals(expected, actual);
	}

	public void test_readFile_A$IFile_T$InvalidPreferenceException() throws Exception {
		// TODO auto-generated by JUnit Helper.
		InputStream expected = null;
		IFile arg0 = null;
		try{
			InputStream actual = FileResourceUtil.readFile(arg0);
			fail("Expected exception was not thrown! (InvalidPreferenceException)");
		} catch (InvalidPreferenceException e) {}
	}

	public void test_detectEncoding_A$IFile() throws Exception {
		// TODO auto-generated by JUnit Helper.
		String expected = null;
		IFile arg0 = null;
		String actual = FileResourceUtil.detectEncoding(arg0);
		assertEquals(expected, actual);
	}

	public void test_detectEncoding_A$IFile_T$InvalidPreferenceException() throws Exception {
		// TODO auto-generated by JUnit Helper.
		String expected = null;
		IFile arg0 = null;
		try{
			String actual = FileResourceUtil.detectEncoding(arg0);
			fail("Expected exception was not thrown! (InvalidPreferenceException)");
		} catch (InvalidPreferenceException e) {}
	}

}
